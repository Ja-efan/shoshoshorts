services:
  # 백엔드 서비스
  backend:
    image: sss-backend:latest
    container_name: sss-backend
    ports:
      - "${BACKEND_PORT}:8080"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATA_MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DB}?authSource=admin
      - API_PASSWORD=${API_PASSWORD}
    depends_on:
      - db
      - mongo
    networks:
      - sss-network
    restart: unless-stopped

  # 프론트엔드 서비스
  frontend:
    image: sss-frontend:latest
    container_name: sss-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    networks:
      - sss-network
    restart: unless-stopped

  # PostgreSQL 데이터베이스 서비스
  db:
    image: postgres:16-alpine
    container_name: sss-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sss-network
    restart: unless-stopped

  # MongoDB 데이터베이스 서비스
  mongo:
    image: mongo:7.0
    container_name: sss-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - sss-network
    restart: unless-stopped

networks:
  sss-network:
    driver: bridge

volumes:
  postgres-data:
  mongo-data: 